# nginx/conf.d

# --- Блок для HTTP-01 Challenge от Certbot ---
server {
    listen 80;
    server_name tamerun-invest.ru www.tamerun-invest.ru; # Замените на ваши доменные имена

    # Эта директория должна быть смонтирована как volume: ./certbot/www:/var/www/certbot
    location /.well-known/acme-challenge/ {
        alias /var/www/certbot/.well-known/acme-challenge/;
        # Важно, чтобы Nginx мог отдать эти файлы
        try_files $uri =404;
    }

    # Перенаправляем все остальные HTTP запросы на HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}
# --- КОНЕЦ БЛОКА HTTP-01 Challenge ---


# --- Блок для HTTPS трафика (после получения сертификата) ---
server {
    listen 443 ssl;
	http2 on;
    server_name tamerun-invest.ru www.tamerun-invest.ru; # Замените на ваши доменные имена

    root /usr/share/nginx/html;

    # SSL сертификаты, которые Certbot запишет в /etc/letsencrypt/
    # Путь к сертификатам должен соответствовать вашему домену
#    ssl_certificate /etc/letsencrypt/live/tamerun-invest.ru/fullchain.pem;
#    ssl_certificate_key /etc/letsencrypt/live/tamerun-invest.ru/privkey.pem;

    # Рекомендуемые настройки SSL (можно добавить или использовать готовые из certbot)
    # Пример:
#    include /etc/letsencrypt/options-ssl-nginx.conf;
#    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # Если вы его сгенерировали

    # --- НАЧАЛО БЛОКА SERVER (для HTTP-трафика, полученного от Master NGINX) ---
    # Этот сервер слушает порт 443 внутри контейнера nginx-proxy
    # Ваши прокси-настройки остаются здесь, но теперь под SSL

    # Обслуживание статических файлов фронтенда
    location / {
        index index.html;
        try_files $uri $uri/ /index.html;
        # для SPA: все запросы перенаправляем на index.html
    }

    # Обслуживание статических файлов самого Vite
    location /assets {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Не даем доступ к .env и другим файлам
    location ~ /\. {
        deny all;
        return 404;
    }

    # Сильное кэширование для статических ресурсов
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Проксирование для Backend (Flask)
    location ~ ^/(api/|apidocs/|flasgger_static/|apispec_\d+\.json) {
        # Отправляем на backend контейнер, который слушает 5000
        proxy_pass http://backend:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    # --- КОНЕЦ БЛОКА SERVER ---
}
